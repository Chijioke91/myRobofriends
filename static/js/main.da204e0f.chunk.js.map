{"version":3,"sources":["serviceWorker.js","components/Cards.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","components/Header.js","containers/App.js","actions.js","types.js","reducers.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Card","robot","name","email","id","className","src","alt","CardList","robots","map","key","SearchBox","onSearchChange","aria-label","onChange","e","type","placeholder","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","hasError","info","this","setState","Component","Header","connect","term","searchRobots","fetchRobots","isLoading","setSearchTerm","payload","dispatch","a","axios","get","data","message","useEffect","filteredRobots","filter","toLowerCase","includes","target","value","INIT_STATE_SEARCH","INIT_STATE_FETCH","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","querySelector","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.da204e0f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\n\r\nconst Card = ({ robot: { name, email, id } }) => {\r\n  return (\r\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robots\" />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Cards';\r\n\r\nconst CardList = ({ robots }) =>\r\n  robots.map(robot => <Card key={robot.id} robot={robot} />);\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ onSearchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n        aria-label=\"Search Robots\"\r\n        onChange={e => onSearchChange(e)}\r\n        className=\"pa3 ba b--green bg-lightest-green\"\r\n        type=\"text\"\r\n        placeholder=\"search robots\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = props => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: 'scroll',\r\n        border: '1px solid black',\r\n        height: '900px'\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = { hasError: false };\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>This is bad</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import '../containers/App.css';\r\nimport React from 'react';\r\n\r\nconst Header = () => <h1 className=\"f1\">RoboFriends</h1>;\r\n\r\nexport default Header;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport { setSearchTerm, fetchRobots } from '../actions';\r\nimport Header from '../components/Header';\r\n\r\nconst App = ({ term, setSearchTerm, fetchRobots, robots, isLoading }) => {\r\n  useEffect(() => {\r\n    fetchRobots();\r\n  }, [fetchRobots]);\r\n\r\n  const onSearchChange = e => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const filteredRobots = robots.filter(robot =>\r\n    robot.name.toLowerCase().includes(term.toLowerCase())\r\n  );\r\n\r\n  return isLoading ? (\r\n    <h1>Loading...</h1>\r\n  ) : (\r\n    <div className=\"tc\">\r\n      <Header />\r\n      <SearchBox onSearchChange={onSearchChange} />\r\n      <Scroll>\r\n        <ErrorBoundary>\r\n          <CardList robots={filteredRobots} />\r\n        </ErrorBoundary>\r\n      </Scroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  term: state.searchRobots.term,\r\n  robots: state.fetchRobots.robots,\r\n  isLoading: state.fetchRobots.isLoading\r\n});\r\n\r\nexport default connect(mapStateToProps, { setSearchTerm, fetchRobots })(App);\r\n","import axios from 'axios';\r\nimport {\r\n  CHANGE_SEARCH_TERM,\r\n  FETCH_ROBOTS_PENDING,\r\n  FETCH_ROBOTS_SUCCESS,\r\n  FETCH_ROBOTS_FAILED\r\n} from './types';\r\n\r\nexport const setSearchTerm = term => {\r\n  return {\r\n    type: CHANGE_SEARCH_TERM,\r\n    payload: term\r\n  };\r\n};\r\n\r\nexport const fetchRobots = () => async dispatch => {\r\n  dispatch({ type: FETCH_ROBOTS_PENDING });\r\n\r\n  try {\r\n    const { data } = await axios.get(\r\n      'https://jsonplaceholder.typicode.com/users'\r\n    );\r\n\r\n    dispatch({\r\n      type: FETCH_ROBOTS_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (e) {\r\n    dispatch({ type: FETCH_ROBOTS_FAILED, payload: e.message });\r\n  }\r\n};\r\n","export const CHANGE_SEARCH_TERM = 'CHANGE_SEARCH_TERM';\r\nexport const FETCH_ROBOTS_PENDING = 'FETCH_ROBOTS_PENDING';\r\nexport const FETCH_ROBOTS_SUCCESS = 'FETCH_ROBOTS_SUCCESS';\r\nexport const FETCH_ROBOTS_FAILED = 'FETCH_ROBOTS_FAILED';\r\n","import { combineReducers } from 'redux';\r\n\r\nimport {\r\n  CHANGE_SEARCH_TERM,\r\n  FETCH_ROBOTS_PENDING,\r\n  FETCH_ROBOTS_SUCCESS,\r\n  FETCH_ROBOTS_FAILED\r\n} from './types';\r\n\r\nconst INIT_STATE_SEARCH = {\r\n  term: ''\r\n};\r\n\r\nexport const searchRobots = (state = INIT_STATE_SEARCH, { type, payload }) => {\r\n  switch (type) {\r\n    case CHANGE_SEARCH_TERM:\r\n      return {\r\n        ...state,\r\n        term: payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst INIT_STATE_FETCH = {\r\n  robots: [],\r\n  isLoading: false,\r\n  error: ''\r\n};\r\n\r\nexport const fetchRobots = (state = INIT_STATE_FETCH, { type, payload }) => {\r\n  switch (type) {\r\n    case FETCH_ROBOTS_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n\r\n    case FETCH_ROBOTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        robots: payload\r\n      };\r\n\r\n    case FETCH_ROBOTS_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  searchRobots,\r\n  fetchRobots\r\n});\r\n","import './index.css';\r\nimport React from 'react';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport 'tachyons';\r\n\r\nimport App from './containers/App';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector('#root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}